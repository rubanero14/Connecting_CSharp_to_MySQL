@page "/people"

<PageTitle>People Data</PageTitle>

@using DataLibrary;
@using BlazorServer.Models;
@using Microsoft.Extensions.Configuration;
@inject IDataAccess _data
@inject IConfiguration _config;

<h3>People</h3>

<button class="btn btn-outline-success mb-3" @onclick="FetchData">Fetch All</button>
<button class="btn btn-outline-primary mb-3" @onclick="InsertData">Insert</button>
<button class="btn btn-outline-secondary mb-3" @onclick="UpdateData">Update</button>
<button class="btn btn-outline-danger mb-3" @onclick="DeleteData">Delete</button>  

@if (people == null && !isFetching)
{
    <h4>Press <kbd>Fetch All</kbd> to load data!</h4>
}
else if (people == null && isFetching)
{
    <p><em>Loading...</em></p>
}
else 
{
    <table class="table table-bordered table-striped table-hover table-responsive">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.Id</td>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                </tr>
            }
        </tbody>
    </table>  
}

@code {
    List<PersonModel> people;

    bool isFetching = false;

    // Insert new person into Table - Create
    private async Task InsertData()
    {
        string sql = $"INSERT INTO people(FirstName, LastName) VALUES (@FirstName, @LastName);";
        await _data.SaveData(sql, new { FirstName = "Black", LastName = "Widow" }, _config.GetConnectionString("default"));
        await FetchData();
    }

    // Get all List from Table - Read
    private async Task FetchData()
    {
        isFetching = true;
        string sql = "SELECT * FROM people";
        people = await _data.LoadData<PersonModel, dynamic>(sql, new {}, _config.GetConnectionString("default"));
        isFetching = false;
    }

    // Get all List from Table - Update
    private async Task UpdateData()
    {
        string sql = "UPDATE people SET FirstName = @FirstName, LastName = @LastName WHERE Id = @Id";
        await _data.SaveData(sql, new { FirstName = "Bruce", LastName = "Wayne", Id = 1 }, _config.GetConnectionString("default"));
        await FetchData();
    }

    // Get all List from Table - Delete
    private async Task DeleteData()
    {
        string sql = "DELETE FROM people WHERE FirstName = @FirstName;";
        await _data.SaveData(sql, new { FirstName = "Cat" }, _config.GetConnectionString("default"));
        await FetchData();
    }
}
